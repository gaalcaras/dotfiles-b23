# ###############
# Zsh config file
# by @gaalcaras
# ###############

# GENERAL {{{

autoload -U zmv

setopt prompt_subst

setopt glob_complete
setopt complete_in_word
setopt always_to_end
setopt auto_menu

# Ask to correct commands but not arguments
setopt nocorrectall
setopt correct

# Completion
autoload -U +X compinit && compinit -d $HOME/.cache/zsh/zcompdump-$ZSH_VERSION
autoload -U +X bashcompinit && bashcompinit

zstyle ':completion*:default' menu 'select=0'
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' list-colors ''

# History
export HISTFILE="$HOME/.zsh_history"
export SAVEHIST=100000
export HISTSIZE=100000
export HISTFILESIZE=100000

setopt extended_history
setopt HIST_FIND_NO_DUPS
setopt inc_append_history_time

# }}}

# EXPORTS {{{

# If TERM is set to xterm-256color mutt has problems redrawing
# after viewing attachments.
# See: https://superuser.com/questions/844058/tmux-mutt-not-redrawing
export TERM="screen-256color"

export GOBIN="$HOME/go/bin"
export GOPATH="$HOME/go"

export PATH=$HOME/.dotfiles/bin/:$HOME/.tmuxifier/bin/:$HOME/bin:/usr/local/bin:$HOME/.gem/ruby/2.6.0/bin:/bin:/usr/local/bin:/usr/bin:/usr/bin/vendor_perl:/usr/bin/core_perl:$GOBIN
export EDITOR="nvim"
export PDFREADER="/usr/bin/zathura"
export BROWSER="/usr/bin/firefox"
export TERMINAL="/usr/bin/termite -e"
export MANPATH="/usr/local/man:$MANPATH"

export SUDO_ASKPASS=$HOME/.dotfiles/bin/sudo_askpass
# }}}

# VIM KEYBINDING {{{
bindkey -v

# http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html
bindkey -M vicmd '^' vi-beginning-of-line
bindkey -M vicmd '0' vi-beginning-of-line

bindkey -M vicmd 'c' vi-backward-char
bindkey -M vicmd 'r' vi-forward-char

# Vi mode breaks up and down arrow keys with history search.
# This is the fix:
# https://github.com/robbyrussell/oh-my-zsh/issues/1720#issuecomment-286366959

autoload -U history-search-end
zle -N history-beginning-search-backward-end history-search-end
bindkey "^[[A" history-beginning-search-backward-end

bindkey -M vicmd 'b' backward-word
bindkey -M vicmd 'Ã©' forward-word

bindkey -M vicmd 'yy' vi-yank-whole-line
bindkey -M vicmd 'Y' vi-yank-eol

bindkey -M vicmd 'l' vi-change-eol
bindkey -M vicmd 'L' vi-change-eol
bindkey -M vicmd 'll' vi-change-whole-line

# }}}

# PROMPT {{{

function git_prompt_info() {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  branch=$(basename "$ref")
  gst=''
  color="green"
  unstaged=$(git status --porcelain | cut -c1-3 | grep \? | wc -l)
  changed=$(git status --porcelain | cut -c1-3 | grep -v \? | wc -l)
  (($unstaged > 0)) && unstaged="?" || unstaged=""
  (($changed > 0)) && changed="+" && color="red" || changed=""
  echo "%F{$color}[$branch$changed$unstaged] %f"
}

function pre_prompt() {
  uname=$(whoami)
  [[ "$uname" != "gaalcaras" ]] && echo "$uname"
  hostname=$(hostname)
  [[ "$hostname" != "batcave" ]] && echo "@$hostname"
}

PROMPT='%F{blue}$(pre_prompt)%(l..:.)%f%F{magenta}%~%f $(git_prompt_info)$ %f'

# }}}

# ALIASES {{{

# ls aliases
alias ls="ls -F --color=auto --block-size=M"
alias la="ls -a"
alias ll="ls -l"
alias lla="ll -a"
alias ldot="ll -d .*"

# Directories
alias dotfiles="cd ~/.dotfiles"
alias pdw="cd ~/Documents/phd-writing"

# Git aliases
alias glog="git log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"
alias gst='git status -sb'
alias gc='git commit'
alias ga='git add -p'

# Locale stuff
alias git='LC_ALL=C git'
alias khal='LC_TIME=C khal'
alias ikhal='LC_TIME=C ikhal'

# Tools
alias nv="nvim"
alias mutt='hash tmuxifier 2>/dev/null && tmuxifier load-window mutt || neomutt -n' # Check if tmuxifier exists before loading mutt setup
alias mr='mr -d "$HOME"' # Multi-repos with minimal output and 5 parallel jobs
alias rss='nvim ~/.dotfiles/newsboat/urls.config'

# Development
alias nvtest='nvim +UpdateRemotePlugins +qall && nvim "+TranscribeAudio ~/Videos/googlepixel.webm"'

# Misc
alias reload='source ~/.zshrc'
alias msmtp-unlock="rm $HOME/.msmtpqueue/.lock"
alias stats="fc -l 1 | awk '{CMD[\$2]++;count++;}END { for (a in CMD)print CMD[a] \" \" CMD[a]/count*100 \"% \" a;}' | grep -v \"./\" | column -c3 -s \" \" -t | sort -nr | nl | head -n20"
alias mmv='noglob zmv -W'


# }}}}

# DOTFILES {{{

function filerc() {
  local tmpdir=$(pwd)
  local rcfile="$1"
  local rcdir=$(dirname "$rcfile")

  cd "$rcdir"
  $EDITOR "$rcfile"

  cd "$tmpdir"
}

alias comptonrc="filerc ~/.dotfiles/compton/compton.conf.config"
alias dunstrc="filerc ~/.dotfiles/dunst/dunstrc.config"
alias gitrc="filerc ~/.dotfiles/git/gitconfig.symlink"
alias gpgrc="filerc ~/.dotfiles/gpg/gpg-agent.conf"
alias gtkrc="filerc ~/.dotfiles/gtk-3.0/gtk.css.config"
alias i3rc="filerc ~/.dotfiles/i3/config_local"
alias khalrc="filerc ~/.dotfiles/khal/config.config"
alias khardrc="filerc ~/.dotfiles/khard/khard.conf.config"
alias mpvrc="filerc ~/.dotfiles/mpv/mpv.conf.config"
alias mrrc="filerc ~/.dotfiles/mr/mrconfig.symlink"
alias muttrc="filerc ~/.dotfiles/neomutt.config/muttrc"
alias newsboatrc="filerc ~/.dotfiles/newsboat/config.config"
alias msmtprc="filerc ~/.dotfiles/offlineimap/msmtprc.symlink"
alias imaprc="filerc ~/.dotfiles/offlineimap/offlineimaprc.symlink"
alias papisrc="filerc ~/.dotfiles/papis/config.config"
alias polybarrc="filerc ~/.dotfiles/polybar/config.config"
alias rangerrc="filerc ~/.dotfiles/ranger/rc.conf.config"
alias rofirc="filerc ~/.dotfiles/rofi/config.rasi.config"
alias scimrc="filerc ~/.dotfiles/scim/scimrc.symlink"
alias swayrc="filerc ~/.dotfiles/sway/config_local"
alias taskrc="filerc ~/.dotfiles/task/taskrc.symlink"
alias termiterc="filerc ~/.dotfiles/termite/config_local"
alias texrc="filerc ~/.dotfiles/tex/latexmkrc.symlink"
alias tmuxrc="filerc ~/.dotfiles/tmux/tmux.conf.symlink"
alias vdirsyncerrc="filerc ~/.dotfiles/vdirsyncer/config.config"
alias vimrc="filerc ~/.dotfiles/vim/vimrc.symlink"
alias waybarrc="filerc ~/.dotfiles/waybar/config.config"
alias xinitrc="filerc ~/.dotfiles/X/xinitrc.symlink"
alias zathurarc="filerc ~/.dotfiles/zathura/zathurarc.config"
alias zshrc="filerc ~/.dotfiles/zsh/zshrc.symlink"

# }}}

# CHECKLIST {{{

function checklist_add {
  local checklist="$1"
  local element="${@:2}"

  if [ "$element" = "" ]; then
    $EDITOR $checklist
  else
    echo "[ ] $element" >> "$checklist"
  fi
}

alias google="checklist_add $HOME/Nextcloud/Checklists/google.txt"
alias book="checklist_add $HOME/Nextcloud/Checklists/books.txt"

# }}}

# NOTE TAKING {{{

zettel() {
  local tmpdir=$(pwd)
  local cmd="Note $@"

  cd "$HOME/Zettelkasten/zettel"
  nvim -c "$cmd"

  cd "$tmpdir"
}

zstyle ':completion:*:*:zettel:*:*' file-sort 'reverse'
compdef '_path_files -W $HOME/Zettelkasten/zettel -g "*"' zettel

zstyle ':completion:*:*:note:*:*' file-sort 'reverse'
compdef '_path_files -W $HOME/Nextcloud/Notes -g "*.md"' note

# }}}

# INIT {{{

if [[ -z $DISPLAY ]] && [[ $(tty) = /dev/tty1 ]]; then
#  sway
#  exit 0
fi

if hash register-python-argcomplete 2>/dev/null; then
  eval "$(register-python-argcomplete pubs)"
fi

if hash tmuxifier 2>/dev/null;
then
  eval "$(tmuxifier init -)"
fi

precmd() {
  print -Pn "\e]0;%m:%~\a"
}

function preexec {
  printf "\033]0;%s\a" "$1"
}

# }}}

# vim: fdm=marker fmr={{{,}}} fdl=0 fen
