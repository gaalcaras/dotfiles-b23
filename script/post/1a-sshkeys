#!/usr/bin/env bash
#
# Post-install : generate ssh-keys

message="Do you want to generate ssh keys now?"

hosts[1]='batcloud.me'
hosts[2]='aur.archlinux.org'
hosts[3]='gitlab.com'
hosts[4]='github.com'

sshdir="$home/.ssh"
file="$sshdir/config"
pubrecap="$home/sshpub.txt"

header 'SSH keys'

echo 'We can generate new SSH keys for all your hosts.'
echo "Existing SSH config files will be backed up at $sshdir.bak"
echo 'in case something goes wrong.'
echo 
echo 'All public ssh keys will be available in a single txt'
echo "file in your home directory $pubrecap so that you"
echo 'can find them all easily.'
echo
warning "Don't forget to add the keys to the distant hosts"
echo

function add_ssh_host {
  doing "Add host $1 to config"
  $run_as_normal echo "Host $1" >> $file
  $run_as_normal echo "  HostName $1" >> $file
  $run_as_normal echo "  IdentityFile $sshdir/$1" >> $file
  $run_as_normal echo >> $file

  if [ ! -f $sshdir/$1 ]; then
    doing "Creating SSH key for host $1"
    $run_as_normal ssh-keygen -f $sshdir/$1
  else
    warning "SSH key for host $1 already exists"
  fi
}

function post_install {
  doing 'Backing up existing SSH config'
  cp -r $sshdir $sshdir.bak
  echo

  echo '' > $file

  for i in ${!hosts[*]}; do
    msg "Do you want to generate SSH key for host ${hosts[$i]}?"

    select yn in "Yes" "No"; do
      case $yn in
        Yes ) add_ssh_host ${hosts[$i]}; break;;
        No ) warning "Skipping for ${hosts[$i]}"; break;;
      esac
    done
    echo
  done

  echo '' > $pubrecap

  for f in $sshdir/*.pub; do
    echo "Public SSH key for: $f" >> $pubrecap
    cat $f >> $pubrecap
    echo "" >> $pubrecap
  done

}
