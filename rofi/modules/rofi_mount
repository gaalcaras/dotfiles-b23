#!/bin/bash
# ########################################################################
# ROFI SCRIPT: MOUNT
# by Gabriel Alcaras
#
# Helper script to edit an existing zettel or create a new one.
#
# ########################################################################


# -----
# SETUP
# -----
MOUNTPOINT="/run/media/gaalcaras"
THEME=${1:-"dark"}
DRIVES="$(lsblk -rpo "name,type,size,mountpoint,label" | grep -v "nvme" | awk '$2=="part"&&$5==""{if ($4 == ""){l="UNKNOWN"}else{l=$4}; printf "Mount %s on %s (%s)\n",l,$1,$3}')"
MOUNTS="$(lsblk -rpo "name,type,size,mountpoint,label" | grep -v "nvme" | awk '$2=="part"&&$5!=""{printf "Unmount %s at %s (%s)\n",$5,$4,$3}')"

[[ -z "$DRIVES" && -z "$MOUNTS" ]] && exit 0

[[ -z "$DRIVES" ]] && OPTIONS="$MOUNTS" || OPTIONS="$DRIVES\\n$MOUNTS"

option0=$(echo -e "$OPTIONS" | rofi -dmenu -i -p 'pick a drive' -theme "$THEME")

[[ -z "$option0" ]] && exit 0

drive=$(echo "$option0" | cut -d" " -f 4)
label=$(echo "$option0" | cut -d" " -f 2)

if [[ "$option0" =~ "Mount " ]]; then
  mountpoints=("$label" "drive1" "drive2")
  options=""

  for mount in ${mountpoints[*]}
  do
    if [[ ! -d "$MOUNTPOINT/$mount" ]] || ! mountpoint "$MOUNTPOINT/$mount" &> /dev/null; then
      options=$(printf "Mount '%s' on $MOUNTPOINT/%s\\n%s" "$mount" "$mount" "$options")
    fi
  done

  option1=$(echo -e "$options" | rofi -dmenu -i -p "choose a mountpoint" -theme "$THEME")

  [[ -z "$option1" ]] && exit 0

  if [[ "$option1" =~ "Mount " ]]; then
    mountpoint=${option1##* on }
  else
    mountpoint="$MOUNTPOINT/$option1"
  fi

  if sudo -A mkdir -p "$mountpoint" ; then
    if sudo -A mount "$drive" "$mountpoint"; then
      exit 0
    else
      msg="'$label' ($drive) could not be mounted at '$mountpoint' :("
    fi
  else
    msg="Couldn't create '$mountpoint' :("
  fi
elif [[ "$option0" =~ "Unmount " ]]; then
  if sudo -A umount "$drive" && sudo -A rm "$drive"; then
    exit 0
  else
    msg="'$label' ($drive) could not be mounted at '$mountpoint' :("
  fi
else
  exit 0
fi

echo -e "$msg" | rofi -dmenu -i -p "result" -theme "$THEME"
