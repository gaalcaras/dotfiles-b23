#!/usr/bin/env bash

# ==========================================
# Msmtp run queue
#
# Send emails in the queue (when online,
# preferably)
# ==========================================

QUEUEDIR="$HOME/.msmtpqueue"
LOCKFILE="$QUEUEDIR/.lock"
MAXWAIT=120

OPTIONS=$@

function warn {
  echo `date +"%Y-%m-%d %H:%M:%S"` "WARNING: $1"
}

function log {
  echo `date +"%Y-%m-%d %H:%M:%S"` "INFO: $1"
}

log "Starting msmtp-runqueue..."

# Wait for a lock that another instance has set
WAIT=0
while [ -e "$LOCKFILE" -a "$WAIT" -lt "$MAXWAIT" ]; do
  sleep 1
  WAIT="`expr "$WAIT" + 1`"
done
if [ -e "$LOCKFILE" ]; then
  warn "Cannot use $QUEUEDIR: waited $MAXWAIT seconds for"
  warn "lockfile $LOCKFILE to vanish, giving up."
  warn "If you are sure that no other instance of this script is"
  warn "running, then delete the lock file."
  exit 1
fi

# Change into $QUEUEDIR
cd "$QUEUEDIR" || exit 1

# Check for empty queuedir
if [ "`echo *.mail`" = '*.mail' ]; then
  log "No mails in $QUEUEDIR"
  exit 0
fi

# Lock the $QUEUEDIR
touch "$LOCKFILE" || exit 1

# Process all mails
for MAILFILE in *.mail; do
  MSMTPFILE="`echo $MAILFILE | sed -e 's/mail/msmtp/'`"
  log "Sending $MAILFILE to `sed -e 's/^.*-- \(.*$\)/\1/' $MSMTPFILE` ..."
  if [ ! -f "$MSMTPFILE" ]; then
    warn "No corresponding file $MSMTPFILE found"
    warn "FAILURE"
    continue
  fi
  msmtp $OPTIONS `cat "$MSMTPFILE"` < "$MAILFILE"
  if [ $? -eq 0 ]; then
    rm "$MAILFILE" "$MSMTPFILE"
    log "$MAILFILE sent successfully"
  else
    warn "FAILURE"
  fi
done

# Remove the lock
rm -f "$LOCKFILE"

log "Stop msmtp-runqueue"

exit 0
